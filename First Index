/*

Take as input N, the size of array. Take N more inputs and store that in an array. Take as input M, a number. Write a recursive function which returns the first index at which M is found in the array and -1 if M is not found anywhere. Print the value returned.

Input Format
Enter a number N and add N more elements to an array, then enter a number M

Constraints
None

Output Format
Display the first index at which number M is found

Sample Input
5
3
2
1
2
2
2

Sample Output
1

*/

// Code...

import java.util.*;
public class Main {
	public static void main(String [] args){
		Scanner sc = new Scanner(System.in);
		int n=sc.nextInt();
		int arr[]=new int[n];
		for(int i=0;i<n;i++){
			arr[i]=sc.nextInt();
		}
		int x=sc.nextInt();	
		System.out.println(firstIndex(arr,0,x));
	}
   	
	public static int firstIndex(int arr[], int idx, int x){
		if(idx==arr.length){
			return -1;
		}
		if(arr[idx]==x){
			return idx;
		}
		else{
			return firstIndex(arr,idx+1,x);
		}
	}
}



// public class Solution {

// 	public static int firstIndex(int input[], int x) {
// 		return ans(input,x,0);
//     }
    
//     public static int ans(int input[],int x,int startIndex)
//     {
//       int n=input.length;
     
//         if(startIndex==n)
//         {
//             return -1;
//         }
//         if(x==input[startIndex])
//         {
//             return startIndex;
//         }
//         return ans(input,x,startIndex+1);
// 	}

// }
