/*

Take as input N, a number. Take N more inputs and store that in an array. Take as input target, a number

a. Write a recursive function which counts the number of subsets of the array which sum to target. Print the value returned.

b. Write a recursive function which prints subsets of the array which sum to target. Return type of functions is void.

Input Format
Take as input N, a number. Take N more inputs and store that in an array.Take as input target, a number

Constraints
None

Output Format
Display the number of subsets and print the subsets in a space separated manner.

Sample Input
3
1
2
3
3

Sample Output
1 2  3
2

*/

// Code...

import java.util.*;
public class Main {
  static int count =0;
    public static void main(String args[]) {
    	Scanner sc = new Scanner(System.in);
    	int n = sc.nextInt();
    	int[] arr = new int[n];
    	for(int i=0; i<n; i++) 
			arr[i] = sc.nextInt();
    		int t = sc.nextInt();
    		boolean[] vis = new boolean[n];
    		subset_sum(arr, t, "", 0, vis);
        	System.out.println("\n"+count);
    	}
  		public static void subset_sum(int[] arr, int sum, String ans, int idx, boolean[] vis){
    		if(sum<0) 
				return;
    		if(sum == 0){
      			count++;
      		System.out.print(ans+" ");
      		return;
    	}
    	if(idx>arr.length-1) return;
    	subset_sum(arr, sum-arr[idx], ans+arr[idx]+" ", idx+1, vis);
    	subset_sum(arr, sum, ans, idx+1, vis);
  	}
}
